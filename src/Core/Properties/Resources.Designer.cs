//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ninject.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ninject.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; cannot be null or an empty collection..
        /// </summary>
        internal static string Ex_ArgumentCannotBeNullOrEmptyCollection {
            get {
                return ResourceManager.GetString("Ex_ArgumentCannotBeNullOrEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; cannot be null or an empty string..
        /// </summary>
        internal static string Ex_ArgumentCannotBeNullOrEmptyString {
            get {
                return ResourceManager.GetString("Ex_ArgumentCannotBeNullOrEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binder must be associated with a kernel before bindings may be registered..
        /// </summary>
        internal static string Ex_BinderNotAssociatedWithKernel {
            get {
                return ResourceManager.GetString("Ex_BinderNotAssociatedWithKernel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create instance of type {0}: {1}.
        /// </summary>
        internal static string Ex_CannotCreateInstanceOfType {
            get {
                return ResourceManager.GetString("Ex_CannotCreateInstanceOfType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The constructor argument &apos;{0}&apos; has already been given a transient value..
        /// </summary>
        internal static string Ex_ConstructorArgumentAlreadyHasTransientvalue {
            get {
                return ResourceManager.GetString("Ex_ConstructorArgumentAlreadyHasTransientvalue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service type {0} of the custom binding was registered under the type {1}. These types must match..
        /// </summary>
        internal static string Ex_CustomBindingServiceTypeMismatch {
            get {
                return ResourceManager.GetString("Ex_CustomBindingServiceTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field injector only supports a single argument..
        /// </summary>
        internal static string Ex_FieldInjectorOnlySupportsOneArgument {
            get {
                return ResourceManager.GetString("Ex_FieldInjectorOnlySupportsOneArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GenericProvider is not compatible with the type {0} because it is not a generic type definition..
        /// </summary>
        internal static string Ex_GenericProviderOnlySupportsGenericTypeDefinitions {
            get {
                return ResourceManager.GetString("Ex_GenericProviderOnlySupportsGenericTypeDefinitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} cannot be used as a custom behavior type because it does not implement the IBehavior interface..
        /// </summary>
        internal static string Ex_InvalidCustomBehavior {
            get {
                return ResourceManager.GetString("Ex_InvalidCustomBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The kernel is missing an implementation of the required component {0}..
        /// </summary>
        internal static string Ex_KernelMissingRequiredComponent {
            get {
                return ResourceManager.GetString("Ex_KernelMissingRequiredComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The kernel is not managing the specified instance..
        /// </summary>
        internal static string Ex_KernelNotManagingInstance {
            get {
                return ResourceManager.GetString("Ex_KernelNotManagingInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified key does not exist in the multimap..
        /// </summary>
        internal static string Ex_KeyDoesNotExistInMultimap {
            get {
                return ResourceManager.GetString("Ex_KeyDoesNotExistInMultimap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No component with the type {0} has been added to the kernel..
        /// </summary>
        internal static string Ex_NoSuchComponent {
            get {
                return ResourceManager.GetString("Ex_NoSuchComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object has been disposed and is no longer usable..
        /// </summary>
        internal static string Ex_ObjectHasBeenDisposed {
            get {
                return ResourceManager.GetString("Ex_ObjectHasBeenDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; has already been given a transient value..
        /// </summary>
        internal static string Ex_PropertyAlreadyHasTransientValue {
            get {
                return ResourceManager.GetString("Ex_PropertyAlreadyHasTransientValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property injector only supports a single argument..
        /// </summary>
        internal static string Ex_PropertyInjectorOnlySupportsOneArgument {
            get {
                return ResourceManager.GetString("Ex_PropertyInjectorOnlySupportsOneArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The StandardProvider is not compatible with the type {0} because it is an abstract type or an interface..
        /// </summary>
        internal static string Ex_StandardProviderDoesNotSupportInterfacesOrAbstractTypes {
            get {
                return ResourceManager.GetString("Ex_StandardProviderDoesNotSupportInterfacesOrAbstractTypes", resourceCulture);
            }
        }
    }
}
